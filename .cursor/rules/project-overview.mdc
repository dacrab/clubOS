---
alwaysApply: true
---
## ClubOS Svelte â€“ Project Overview and Standards

### Tech stack
- SvelteKit (Svelte 5 runes: `$state`, `$derived`, `$bindable`)
- Vite
- TypeScript (strictest options enabled in `tsconfig.json`)
- Biome for lint/format (extends Ultracite)
- Supabase for auth, storage, and database access (no Drizzle ORM)

### Key rules
- Prefer using shared UI barrel exports in `src/lib/components/ui/**/index.ts` (e.g., `import { Card } from "$lib/components/ui/card"`).
- Avoid unused code: keep components reusable and referenced; use Knip to detect genuine dead code.
- Environment variables:
  - Use `$env/dynamic/public` for `PUBLIC_SUPABASE_URL` on client
  - Use `$env/dynamic/private` for `SUPABASE_URL` and `SUPABASE_SECRET_KEY` on server
- Accessibility: follow Ultracite a11y rules strictly.

### Commands
- Format/lint/typecheck: `bun run check`
- Biome auto-fix: `npx ultracite fix`
- Knip: `bun knip`

### File references
- TypeScript config: [`tsconfig.json`](mdc:tsconfig.json)
- Biome config: [`biome.jsonc`](mdc:biome.jsonc)
- Vite config: [`vite.config.ts`](mdc:vite.config.ts)
- Knip config: [`ncip.json`](mdc:knip.json)
 - Knip config: [`knip.json`](mdc:knip.json)
