---
alwaysApply: true
---
## Svelte Runes and Accessibility

### Runes usage
- Use `$state` for local mutable state; declare as `let` when bindable.
- Use `$derived` for computed values; prefer `const` and pure expressions.
- Use `$bindable` for component props that support two-way binding; destructure from `$props` with `let` (not `const`).
- Do not use invalid runes (`$state.inspect` etc.).

### Props and binding
- When destructuring props with bindables: `let { ref = $bindable(null), value = $bindable("") } = $props();`.
- Import Svelte types with `import type` when `verbatimModuleSyntax` is enabled.

### Accessibility checklist
- Provide `title` for SVG and `type` for `button`.
- Avoid positive `tabIndex`; make interactive elements focusable and accessible.
- Prefer semantic elements over ARIA roles; only add ARIA where valid.
- Ensure anchors are navigable and have accessible content.
- Provide alt text without redundant words (no "image", "photo").
